{% extends "../../partials/layout.njk" %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}

{% set pageTitle = applicationName + " - Add an action" %}
{% set mainClasses = "app-container govuk-body" %}

{% block banner %}
    {% include "../../partials/caseDetailsBanner.njk" %}
    {% include "../../partials/objectiveBanner.njk" %}
{% endblock %}

{% block beforeContent %}
    {{ govukBackLink({ text: "Back", href: "/sentence-plan/" + sentencePlan.id + "/objective/" + objective.id }) }}
{% endblock %}

{% block content %}
    <div class="govuk-!-width-two-thirds">
        {% set errorList = [
            { text: errorMessages.description.text, href: "#description" } if errorMessages.description else None,
            { text: errorMessages.relatesToIntervention.text, href: "#relates-to-intervention" } if errorMessages.relatesToIntervention else None,
            { text: errorMessages.interventionType.text, href: "#intervention-type" } if errorMessages.interventionType else None,
            { text: errorMessages.apInterventionName.text, href: "#ap-intervention-name" } if errorMessages.apInterventionName else None,
            { text: errorMessages.localInterventionNameHtml.text, href: "#local-intervention-name" } if errorMessages.localInterventionNameHtml else None,
            { text: errorMessages.nationalInterventionName.text, href: "#national-intervention-name" } if errorMessages.nationalInterventionName else None,
            { text: errorMessages.otherInterventionName.text, href: "#other-intervention-name" } if errorMessages.otherInterventionName else None,
            { text: errorMessages.targetDate.text, href: "#target-date-month" } if errorMessages.targetDate else None,
            { text: errorMessages.owner.text, href: "#owner" } if errorMessages.owner else None,
            { text: errorMessages.otherOwner.text, href: "#other-owner" } if errorMessages.otherOwner else None,
            { text: errorMessages.status.text, href: "#status" } if errorMessages.status else None
        ] | reject("undefined") %}
        {% if errorList | length > 0 %}
            {% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
            {{ govukErrorSummary({ titleText: "There is a problem", errorList: errorList }) }}
        {% endif %}

        <span class="govuk-caption-l">Objectives</span>
        <h1 class="govuk-heading-l">Add an action</h1>

        <form method="POST">
            <input type="hidden" name="_csrf" value="{{ csrfToken }}">

            {{ govukCharacterCount({
                name: "description",
                id: "description",
                label: { text: "Describe the action", classes: "govuk-label--m" },
                hint: { text: "Describe what must happen to enable the objective to be completed." },
                maxwords: 50,
                errorMessage: errorMessages.description,
                value: action.description
            }) }}

            {{ govukRadios({
                name: "relates-to-intervention",
                classes: "govuk-radios--inline",
                fieldset: {
                    legend: { text: "Will this action involve participation in an intervention programme?", classes: "govuk-fieldset__legend--m" }
                },
                errorMessage: errorMessages.relatesToIntervention,
                items: [
                    { value: "yes", text: "Yes", checked: action.interventionParticipation != null and action.interventionParticipation, attributes: { "aria-controls": "intervention-type-container" } },
                    { value: "no", text: "No", checked: action.interventionParticipation != null and not action.interventionParticipation }
                ]
            }) }}

            {% set apInterventionNameHtml %}
                {{ govukInput({
                    name: "ap-intervention-name",
                    value: action.interventionName if action.interventionType == "accredited-programme" else "",
                    errorMessage: errorMessages.apInterventionName,
                    label: { text: "Accredited programme name", classes: "govuk-label--s" }
                }) }}
            {% endset -%}

            {% set localInterventionNameHtml %}
                {{ govukInput({
                    name: "local-intervention-name",
                    value: action.interventionName if action.interventionType == "local" else "",
                    errorMessage: errorMessages.localInterventionName,
                    label: { text: "Local intervention name", classes: "govuk-label--s" }
                }) }}
            {% endset -%}

            {% set nationalInterventionNameHtml %}
                <div class="govuk-form-group{{ " govuk-form-group--error" if errorMessages.nationalInterventionName else "" }}">
                    <label for="national-intervention-name" class="govuk-label govuk-label--s">
                        National intervention name
                    </label>
                    {% if errorMessages.nationalInterventionName %}
                    <p class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> {{ errorMessages.nationalInterventionName.text }}
                    </p>
                    {% endif %}
                    <div id="national-intervention-name-container"></div>
                </div>
            {% endset -%}

            {% set otherInterventionNameHtml %}
                {{ govukInput({
                    name: "other-intervention-name",
                    value: action.interventionName if action.interventionType == "other" else "",
                    errorMessage: errorMessages.otherInterventionName,
                    label: { text: "Intervention name", classes: "govuk-label--s" }
                }) }}
            {% endset -%}

            <div id="intervention-type-container" class="{{ "govuk-visually-hidden" if action.interventionParticipation != true else "" }}">
                {{ govukRadios({
                    name: "intervention-type",
                    fieldset: {
                        legend: { text: "Which type of intervention will be involved?", classes: "govuk-fieldset__legend--m" }
                    },
                    errorMessage: errorMessages.interventionType,
                    items: [
                        { text: "Accredited Programme", value: "accredited-programme", checked: action.interventionType == "accredited-programme", conditional: { html: apInterventionNameHtml } },
                        { text: "Local Intervention", value: "local", checked: action.interventionType == "local", conditional: { html: localInterventionNameHtml } },
                        { text: "National Intervention", value: "national", checked: action.interventionType == "national", conditional: { html: nationalInterventionNameHtml } },
                        { text: "Other", value: "other", checked: action.interventionType == "other", conditional: { html: otherInterventionNameHtml } }
                    ]
                }) }}
            </div>

            {{ govukDateInput({
                id: "target-date",
                name: "target-date",
                fieldset: {
                    legend: { text: "What is the target date for the action to be finished?", classes: "govuk-label--m" }
                },
                hint: {
                    text: "For example, 10 2023"
                },
                errorMessage: errorMessages.targetDate,
                items: [
                    { name: "month", classes: "govuk-input--width-2", value: '%02d' % action.targetDateMonth },
                    { name: "year", classes: "govuk-input--width-4", value: action.targetDateYear }
                ]
            }) }}

            {% set ensureActionOtherHtml %}
                {{ govukCharacterCount({
                    name: "other-owner",
                    id: "other-owner",
                    fieldset: { legend: {text: "Please provide more details", classes: "govuk-label--s" } },
                    maxwords: 50,
                    errorMessage: errorMessages.otherOwner,
                    value: action.otherOwner
                }) }}
            {% endset -%}

            {{ govukCheckboxes({
                name: "owner",
                fieldset: {
                    legend: { text: "Who will be involved in ensuring this action is completed?", classes: "govuk-fieldset__legend--m" }
                },
                hint: {
                    text: "Select all that apply."
                },
                errorMessage: errorMessages.owner,
                items: [
                    { text: "Individual", value: "individual", checked: action.individualOwner },
                    { text: "Probation Practitioner", value: "practitioner", checked: action.practitionerOwner  },
                    { text: "Other (please provide details)", value: "other", checked: action.otherOwner or errorMessages.otherOwner, conditional: { html: ensureActionOtherHtml } }
                ]
            }) }}

            {{ govukRadios({
                name: "status",
                fieldset: {
                    legend: { text: "What is the current status of this action?", classes: "govuk-fieldset__legend--m" }
                },
                errorMessage: errorMessages.status,
                items: [
                    { text: "To Do", value: "to-do", checked: action.status == "to-do" },
                    { text: "In Progress", value: "in-progress", checked: action.status == "in-progress" }
                ]
            }) }}

            <div class="govuk-button-group">
                {{ govukButton({ type: "Submit", text: "Continue", name: "continue" }) }}
                {{ govukButton({ type: "Submit", text: "Add another action", name: "add-another", classes: "govuk-button--secondary" }) }}
                {{ govukButton({ type: "Submit", text: "Cancel", name: "cancel", classes: "govuk-button--secondary" }) }}
            </div>
        </form>
    </div>
{% endblock %}

{% block additionalStylesheets %}
<link rel="stylesheet" href="/assets/accessible-autocomplete.min.css"/>
{% endblock %}

{% block additionalScripts %}
<script type="text/javascript" src="/assets/accessible-autocomplete.min.js"></script>
<script nonce="{{ cspNonce }}">
  const options = document.querySelectorAll('input[name="relates-to-intervention"]');
  const container = document.getElementById('intervention-type-container');
  options.forEach(option => option.addEventListener('change', () => option.value === 'yes' ? container.classList.remove('govuk-visually-hidden') : container.classList.add('govuk-visually-hidden')));
</script>
<script nonce="{{ cspNonce }}">
  accessibleAutocomplete({
    element: document.querySelector('#national-intervention-name-container'),
    id: 'national-intervention-name',
    name: 'national-intervention-name',
    showAllValues: true,
    defaultValue: "{{ (action.interventionName if action.interventionType == "national" else "") | escape }}",
    source: [
      {% set comma = joiner() %}{% for name in nationalInterventions -%}{{ comma() }}"{{ name | safe | escape }}"{%- endfor %}
    ]
  })
</script>
{% endblock %}
